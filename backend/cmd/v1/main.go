package main

import (
	"fmt"
	"io"
	"log"
	"os"
	"time"

	// docs is generated by Swag CLI
	"pingvinchyk/backend/cmd/v1/docs"
	"pingvinchyk/backend/internal/controllers"
	"pingvinchyk/backend/internal/server"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"

	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger" // gin-swagger middleware
)

// @title           Pingvinchyk API
// @version         1.0
// @description     Pingvinchyk API is a RESTful API for the Pingvinchyk application.
// @BasePath /api/v1

// @license.name  Apache 2.0
// @license.url   http://www.apache.org/licenses/LICENSE-2.0.html

func main() {
	var requestController = controllers.NewRequestController()

	f, _ := os.Create("gin.log")
	gin.DefaultWriter = io.MultiWriter(f, os.Stdout)

	r := gin.Default()
	r.Use(gin.Logger())
	r.Use(cors.New(cors.Config{
		AllowAllOrigins:  true,
		AllowMethods:     []string{"GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"},
		AllowHeaders:     []string{"Origin", "Content-Type", "Authorization", "Accept"},
		ExposeHeaders:    []string{"Content-Length"},
		AllowCredentials: true,
		MaxAge:           12 * time.Hour,
	}))

	api := r.Group("/api/v1")
	{
		api.GET("/hello", requestController.HelloWorld)
	}

	if env := os.Getenv("ENVIRONMENT"); env == "development" {
		host := fmt.Sprintf("localhost%s", os.Getenv("PORT"))
		docs.SwaggerInfo.Host = host
		log.Println("Swagger host set to:", docs.SwaggerInfo.Host)
	} else {
		docs.SwaggerInfo.Host = os.Getenv("HOSTS")
	}

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	server.Run(r.Handler())
}
